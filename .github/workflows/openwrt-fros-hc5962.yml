name: Openwrt-fros-HC5962

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-plug-fros.sh
  DIY_P2_SH: diy-config.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        path: main-repo  # 明确指定检出路径

    - name: Setup environment
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential clang flex g++ gawk gcc-multilib gettext git \
          libncurses5-dev libssl-dev make python3 python3-distutils rsync \
          unzip zlib1g-dev file wget jq time libxml2-dev liblzma-dev libjson-c-dev

    - name: Clone ImmortalWrt
      run: |
        git clone -b $REPO_BRANCH --depth 1 "$REPO_URL" openwrt
        echo "克隆后目录结构:"
        ls -al openwrt/package  # 验证基础目录存在

    - name: Prepare config files
      run: |
        mkdir -p openwrt/package
        cp -v "$GITHUB_WORKSPACE/$CONFIG_FILE" openwrt/.config
        chmod +x "$GITHUB_WORKSPACE/"*.sh

    - name: Run DIY scripts
      run: |
        cd openwrt
        echo "执行 DIY 脚本..."
        bash "$GITHUB_WORKSPACE/$DIY_P1_SH" "$PWD"
        bash "$GITHUB_WORKSPACE/$DIY_P2_SH" "$PWD"
        # 验证脚本执行结果
        [ -d package/fros ] || { echo "FROS 插件未正确克隆"; exit 1; }

    - name: Update feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        # 安装核心依赖包
        ./scripts/feeds install libopenssl libcurl libpcap libsqlite3

    - name: Build configuration
      run: |
        cd openwrt
        make defconfig
        make -j$(nproc) download
        make -j$(($(nproc)+1)) V=s

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: ${{ env.UPLOAD_FIRMWARE }}
      with:
        name: openwrt-firmware
        path: |
          openwrt/bin/targets/ramips/mt7621/*.bin
          openwrt/bin/targets/ramips/mt7621/*.sha256sum
        retention-days: 7

    - name: Create release
      if: ${{ env.UPLOAD_RELEASE }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          openwrt/bin/targets/*/*/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
