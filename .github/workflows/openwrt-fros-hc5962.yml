name: OpenWrt-FROS-HC5962-Build

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: .config
  DIY_P1_SH: diy-plug-fros.sh
  DIY_P2_SH: diy-config.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Verify Config Files
      run: |
        [ -f "$GITHUB_WORKSPACE/$CONFIG_FILE" ] || { echo "错误：缺少 .config 文件"; exit 1; }
        [ -f "$GITHUB_WORKSPACE/$DIY_P1_SH" ] || { echo "错误：缺少 DIY 脚本"; exit 1; }

    - name: Setup Build Environment
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential clang flex g++ gawk gcc-multilib gettext git \
          libncurses5-dev libssl-dev make python3 python3-distutils rsync \
          unzip zlib1g-dev file wget jq time libxml2-dev liblzma-dev libjson-c-dev

    - name: Clone ImmortalWrt
      run: |
        git clone -b $REPO_BRANCH --depth 1 "$REPO_URL" openwrt
        echo "源码目录结构:"
        ls -al openwrt

    - name: Prepare Configuration
      run: |
        mkdir -p openwrt/package
        cp -v "$GITHUB_WORKSPACE/$CONFIG_FILE" openwrt/.config
        chmod +x "$GITHUB_WORKSPACE/"*.sh

    - name: Update Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install libopenssl libcurl libpcap

    - name: Apply Custom Scripts
      run: |
        cd openwrt
        echo "应用自定义脚本..."
        bash "$GITHUB_WORKSPACE/$DIY_P1_SH" "$PWD"
        bash "$GITHUB_WORKSPACE/$DIY_P2_SH" "$PWD"

    - name: Build Firmware
      run: |
        cd openwrt
        make defconfig
        make -j$(nproc) download
        make -j$(($(nproc)+1)) V=s || (make -j1 V=s ; exit 1)

    - name: Verify Build Output
      run: |
        cd openwrt/bin/targets/ramips/mt7621
        echo "生成文件列表:"
        ls -l
        [ -f immortalwrt-*-hiwifi_hc5962-squashfs-sysupgrade.bin ] || exit 1

    - name: Upload Artifacts
      if: ${{ env.UPLOAD_FIRMWARE }}
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-firmware
        path: |
          openwrt/bin/targets/ramips/mt7621/immortalwrt-*-hiwifi_hc5962-squashfs-sysupgrade.bin
          openwrt/bin/targets/ramips/mt7621/sha256sums
        retention-days: 7

    - name: Generate Version Tag
      id: tag_version
      if: ${{ env.UPLOAD_RELEASE }}
      run: |
        DATE=$(date +%Y%m%d)
        echo "version=build-$DATE-${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      if: ${{ env.UPLOAD_RELEASE }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.version }}
        name: Build ${{ steps.tag_version.outputs.version }}
        body: |
          HiWiFi HC5962 定制固件
          - 编译时间: $(date +'%Y-%m-%d %H:%M:%S')
          - 源码分支: ${{ env.REPO_BRANCH }}
        files: |
          openwrt/bin/targets/ramips/mt7621/immortalwrt-*-hiwifi_hc5962-squashfs-sysupgrade.bin
          openwrt/bin/targets/ramips/mt7621/sha256sums
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
