#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Update Checker

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: v23.05.5
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-plug-official.sh
  DIY_P2_SH: diy-config.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Check for alist package
      run: |
        cd openwrt
        if [ -d "package/feeds/luci/luci-app-alist" ]; then
          echo "Alist package found in feeds"
          ls -l package/feeds/luci/luci-app-alist
        elif [ -d "package/alist" ]; then
          echo "Alist package found in package directory"
          ls -l package/alist
        else
          echo "Alist package not found"
          echo "Searching for alist..."
          find . -name "*alist*"
        fi

    - name: Update alist go.mod
      run: |
        cd openwrt
        ALIST_DIR=$(find . -type d -name "*alist*" | grep -v "feeds" | head -n 1)
        if [ -n "$ALIST_DIR" ]; then
          echo "Found alist directory: $ALIST_DIR"
          cd "$ALIST_DIR"
          if [ -f "go.mod" ]; then
            go mod edit -go=1.23.2
            go mod tidy
          else
            echo "go.mod file not found in $ALIST_DIR"
            ls -l
          fi
        else
          echo "Could not find alist directory"
        fi

    - name: Prepare Alist
      run: |
        cd openwrt
        ALIST_DIR=$(find . -type d -name "*alist*" | grep -v "feeds" | head -n 1)
        if [ -n "$ALIST_DIR" ]; then
          cd "$ALIST_DIR"
          if [ -f "go.mod" ]; then
            GOFLAGS="-mod=mod" GO111MODULE=on go build
          else
            echo "go.mod file not found in $ALIST_DIR, skipping build"
            ls -l
          fi
        else
          echo "Could not find alist directory"
        fi

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
